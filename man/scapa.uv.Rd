% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/capa.R
\name{scapa.uv}
\alias{scapa.uv}
\title{Detection of univariate anomalous segments using SCAPA.}
\usage{
scapa.uv(x, beta = NULL, beta_tilde = NULL, type = "meanvar",
  min_seg_len = 10, max_seg_len = Inf, transform = tierney)
}
\arguments{
\item{x}{A numeric vector containing the data which is to be inspected.}

\item{beta}{A numeric constant indicating the penalty for adding an additional epidemic changepoint. It defaults to a BIC style penalty if no argument is provided.}

\item{beta_tilde}{A numeric constant indicating the penalty for adding an additional point anomaly. It defaults to a BIC style penalty if no argument is provided.}

\item{type}{A string indicating which type of deviations from the baseline are considered. Can be "meanvar" for collective anomalies characterised by joint changes in mean and
variance (the default) or "mean" for collective anomalies characterised by changes in mean only.}

\item{min_seg_len}{An integer indicating the minimum length of epidemic changes. It must be at least 2 and defaults to 10.}

\item{max_seg_len}{An integer indicating the maximum length of epidemic changes. It must be at least the min_seg_len and defaults to Inf.}

\item{transform}{A function used to transform the data prior to analysis by \code{\link{scapa.uv}}. This can, for example, be used to compensate for the effects of autocorrelation in the data.
Importantly, the untransformed data remains available for post processing results obtained using \code{\link{scapa.uv}}. The package includes a method which can be used for
the transform, (see \code{\link{tierney}}, the default), but a user defined (ideally sequential) function can be specified.}
}
\value{
An S4 class of type capa.class.
}
\description{
An offline as-if-online implementation of SCAPA (Sequential Collective And Point Anomalies) by Bardwell et al. (2019) for online collective and point anomaly detection. This version of \code{capa.uv} has a default value
\code{transform=tierney} which uses sequential estimates for transforming the data prior to analysis. It also returns an S4 class which allows the results to be postprocessed
at different time points as if the data had been analysed in an online fashion up to that point.
}
\examples{
library(anomaly)
# Simulated data example
set.seed(2018)
# Generate data typically following a normal distribution with mean 0 and variance 1.
# Then introduce 3 anomaly windows and 4 point outliers.
x = rnorm(5000)
x[401:500] = rnorm(100,4,1)
x[1601:1800] = rnorm(200,0,0.01)
x[3201:3500] = rnorm(300,0,10)
x[c(1000,2000,3000,4000)] = rnorm(4,0,100)
# add some initial data to burnin the sequential estimates
x<-c(rnorm(100,0,1),x)
# use magrittr to pipe the data to the transform
library(magrittr)
trans<-.\%>\%tierney(1000)
res<-scapa.uv(x,transform=trans)
res # print a summary of the results
plot(res) # visualise the results
# visualise the results up to t=1500
plot(res,epoch=1500) 


}
\references{
\insertRef{2018arXiv180601947F}{anomaly}
}
